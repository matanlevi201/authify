name: Test and Deploy

on:
  push:
    branches:
      - main # Adjust this to the branch you're using for deployment, e.g., 'main'

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    env: # declare secrets here
      PORT: ${{ secrets.PORT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      EMAIL_SERVICE: ${{ secrets.EMAIL_SERVICE }}
      COURIER_AUTH_TOKEN: ${{ secrets.COURIER_AUTH_TOKEN }}
      COURIER_DOMAIN: ${{ secrets.COURIER_DOMAIN }}
      CLIENT_URL: ${{ secrets.CLIENT_URL }}
      ACCESS_JWT_KEY: ${{ secrets.ACCESS_JWT_KEY }}
      REFRESH_JWT_KEY: ${{ secrets.REFRESH_JWT_KEY }}
      RESET_JWT_KEY: ${{ secrets.RESET_JWT_KEY }}
      TEMP_2FA_JWT_KEY: ${{ secrets.TEMP_2FA_JWT_KEY }}
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
      RESET_PASSWORD_TEMPLATE_ID: ${{ secrets.RESET_PASSWORD_TEMPLATE_ID }}
      GCP_CLIENT_ID: ${{ secrets.GCP_CLIENT_ID }}
      GCP_CLIENT_SECRET: ${{ secrets.GCP_CLIENT_SECRET }}
      GPC_CALLBACK_URL: ${{ secrets.GPC_CALLBACK_URL }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1" # Adjust the version according to your app

      # Install dependencies for backend and frontend
      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      # Run backend unit tests
      - name: Run unit tests
        run: |
          cd backend
          npm run test:unit

      # Check if backend tests pass
      - name: Check backend tests result
        if: success()
        run: echo "Backend tests passed"

      # Run integration tests
      - name: Run integration tests
        run: |
          cd backend
          npm run test:integration

      # Check if integration tests pass
      - name: Check integration tests result
        if: success()
        run: echo "Integration tests passed"

      - name: Install and build frontend and backend
        if: success()
        run: |
          # Backend build (if applicable)
          cd backend
          npm install
          npm run build

      # Deploy to Render if everything is successful
      - name: Deploy to Render
        if: success()
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{"serviceId": "srv-cvr527uuk2gs73c8tpmg"}' \
          https://api.render.com/v1/services/srv-cvr527uuk2gs73c8tpmg/deploys
